---
 - name: Check that the traefik binary exists
   stat:
     path: "/usr/local/bin/traefik"
   register: _traefik_stat
   tags: traefik

 - name: Download traefik binary
   become: true
   get_url:
      url: "https://github.com/traefik/traefik/releases/download/v{{ traefik.version }}/traefik_v{{ traefik.version }}_linux_amd64.tar.gz"
      checksum: "sha256:{{ traefik.sha256 }}"
      dest: "/tmp/traefik_v{{ traefik.version }}_linux_amd64.tar.gz"
      force: false
      mode: 0755
   when: not _traefik_stat.stat.exists
   tags: traefik

 - name: Unpack traefik binary
   unarchive:
     src: "/tmp/traefik_v{{ traefik.version }}_linux_amd64.tar.gz"
     remote_src: true
     dest: "/tmp"
     creates: "/tmp/traefik"
   when: not _traefik_stat.stat.exists
   tags: traefik

 - name: Install traefik binary
   become: true
   copy:
     src: "/tmp/traefik"
     dest: "/usr/local/bin/traefik"
     remote_src: true
     mode: 0755
     owner: root
     group: root
   when: not _traefik_stat.stat.exists
   tags: traefik

 - name: Create traefik group
   become: true
   group:
    name: traefik
    state: present
    system: true
   tags: traefik

 - name: Create the traefik user
   become: true
   user:
     name: traefik
     groups: traefik
     append: true
     shell: /usr/sbin/nologin
     system: true
     create_home: false
     home: /
   tags: traefik

 - name: Ensure that traefik configuration directory exists
   become: true
   file:
     path: /etc/traefik
     state: directory
     mode: '0700'
     owner: traefik
     group: traefik
   tags: traefik

 - name: Ensure that traefik acme configuration directory exists
   become: true
   file:
     path: /etc/traefik/acme
     state: directory
     mode: '0700'
     owner: traefik
     group: traefik
   tags: traefik

 - name: Ensure that traefik certs configuration directory exists
   become: true
   file:
     path: /etc/traefik/certs
     state: directory
     mode: '0700'
     owner: traefik
     group: traefik
   when: traefik.tls.certificate is defined
   tags: traefik

 - name: Copy TLS certificate if provided
   become: true
   copy:
     src: "{{ traefik.tls.certificate }}"
     dest: /etc/traefik/certs/{{ traefik.tls.certificate | basename }}
     mode: '444'
     owner: traefik
     group: traefik
   when: traefik.tls.certificate is defined
   register: _traefik_tls_certificate
   tags: traefik

 - name: Copy TLS key if provided
   become: true
   copy:
     src: "{{ traefik.tls.key }}"
     dest: /etc/traefik/certs/{{ traefik.tls.key | basename }}
     mode: '0400'
     owner: traefik
     group: traefik
   when: traefik.tls.key is defined
   register: _traefik_tls_key
   tags: traefik

 - name: Copy traefik configuration
   become: true
   template:
     src: templates/traefik.yaml.j2
     dest: /etc/traefik/traefik.yaml
     mode: '0600'
     owner: traefik
     group: traefik
   register: _traefik_configuration
   tags: traefik

 - name: Copy traefik dynamic configuration
   become: true
   template:
     src: templates/traefik_dynamic.yaml.j2
     dest: /etc/traefik/traefik_dynamic.yaml
     mode: '0600'
     owner: traefik
     group: traefik
   register: _traefik_dynamic_configuration
   tags: traefik

 - name: Copy the traefik systemd service file
   become: true
   copy:
     content: |
       [Unit]
       Description=traefik proxy
       After=network-online.target
       Wants=network-online.target systemd-networkd-wait-online.service

       [Service]
       Restart=always
       User=traefik
       Group=traefik
       ExecStart=/usr/local/bin/traefik --configfile=/etc/traefik/traefik.yaml
       LimitNOFILE=1048576
       PrivateTmp=true
       PrivateDevices=false
       ProtectHome=true
       ProtectSystem=full
       ReadWriteDirectories=/etc/traefik/acme
       CapabilityBoundingSet=CAP_NET_BIND_SERVICE
       AmbientCapabilities=CAP_NET_BIND_SERVICE
       NoNewPrivileges=true

       [Install]
       WantedBy=multi-user.target
     dest: /etc/systemd/system/traefik.service
     owner: root
     group: root
     mode: 0644
   register: _traefik_service
   tags: traefik

 - name: Ensure Traefik is enabled on boot
   become: true
   systemd:
     daemon_reload: true
     name: traefik
     enabled: true
     state: restarted
   when: _traefik_service.changed or _traefik_configuration.changed or _traefik_dynamic_configuration.changed
   tags: traefik

 - name: Allow traefik http through firewall
   become: true
   community.general.ufw:
     rule: allow
     port: "80"
     proto: tcp
   when: firewall.enabled
   tags: traefik
   
 - name: Allow traefik https through firewall
   become: true
   community.general.ufw:
     rule: allow
     port: "443"
     proto: tcp
   when: firewall.enabled
   tags:
     - firewall   
     - traefik

